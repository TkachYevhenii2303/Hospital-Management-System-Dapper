// <auto-generated />
using System;
using Data_Access_Layer_EF.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Separte_Migrations.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Apointment_StatusAppointment", b =>
                {
                    b.Property<Guid>("Apointment_StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppointmentsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Apointment_StatusId", "AppointmentsId");

                    b.HasIndex("AppointmentsId");

                    b.ToTable("Status_History", (string)null);
                });

            modelBuilder.Entity("Data_Access_Layer_EF.Models.Apointment_Status", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NewID()");

                    b.Property<DateTime?>("Created_at")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Status_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated_at")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.HasKey("Id");

                    b.ToTable("Apointment_Statuses");
                });

            modelBuilder.Entity("Data_Access_Layer_EF.Models.Appointment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NewID()");

                    b.Property<DateTime>("Appointment_End_time")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Appointment_Start_time")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Created_at")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<Guid>("In_DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Patients_CaseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Updated_at")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.HasKey("Id");

                    b.HasIndex("In_DepartmentId");

                    b.HasIndex("Patients_CaseId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("Data_Access_Layer_EF.Models.Clinic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NewID()");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Clinic_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created_at")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated_at")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.HasKey("Id");

                    b.ToTable("Clinics");
                });

            modelBuilder.Entity("Data_Access_Layer_EF.Models.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NewID()");

                    b.Property<Guid>("ClinicId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created_at")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Department_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated_at")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.HasKey("Id");

                    b.HasIndex("ClinicId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Data_Access_Layer_EF.Models.Document_type", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NewID()");

                    b.Property<DateTime?>("Created_at")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Type_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated_at")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.HasKey("Id");

                    b.ToTable("Document_type");
                });

            modelBuilder.Entity("Data_Access_Layer_EF.Models.Documents", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NewID()");

                    b.Property<Guid>("AppointmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created_at")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Document_Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Document_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Document_TypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Document_link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("In_DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PatientsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Patients_CaseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Updated_at")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.HasIndex("Document_TypeId");

                    b.HasIndex("In_DepartmentId");

                    b.HasIndex("PatientsId");

                    b.HasIndex("Patients_CaseId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("Data_Access_Layer_EF.Models.Employees", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NewID()");

                    b.Property<bool>("Active_is")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Created_at")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("First_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated_at")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("User_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Data_Access_Layer_EF.Models.In_Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NewID()");

                    b.Property<bool>("Active_is")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Created_at")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Time_from")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Time_to")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Updated_at")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeesId");

                    b.ToTable("In_Departments");
                });

            modelBuilder.Entity("Data_Access_Layer_EF.Models.Patients", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NewID()");

                    b.Property<DateTime?>("Created_at")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("First_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated_at")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("Data_Access_Layer_EF.Models.Patients_Case", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NewID()");

                    b.Property<decimal>("Amound_Paid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("Created_at")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<DateTime>("End_time")
                        .HasColumnType("datetime2");

                    b.Property<bool>("In_Progress")
                        .HasColumnType("bit");

                    b.Property<Guid>("PatientsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Start_time")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total_Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("Updated_at")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.HasKey("Id");

                    b.HasIndex("PatientsId");

                    b.ToTable("Patients_Cases");
                });

            modelBuilder.Entity("Data_Access_Layer_EF.Models.Roles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NewID()");

                    b.Property<DateTime?>("Created_at")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Role_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated_at")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Data_Access_Layer_EF.Models.Shedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NewID()");

                    b.Property<DateTime?>("Created_at")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("In_DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Time_end")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Time_start")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Updated_at")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.HasKey("Id");

                    b.HasIndex("In_DepartmentId");

                    b.ToTable("Shedules");
                });

            modelBuilder.Entity("EmployeesRoles", b =>
                {
                    b.Property<Guid>("EmployeesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RolesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EmployeesId", "RolesId");

                    b.HasIndex("RolesId");

                    b.ToTable("Has_Role", (string)null);
                });

            modelBuilder.Entity("Apointment_StatusAppointment", b =>
                {
                    b.HasOne("Data_Access_Layer_EF.Models.Apointment_Status", null)
                        .WithMany()
                        .HasForeignKey("Apointment_StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_Access_Layer_EF.Models.Appointment", null)
                        .WithMany()
                        .HasForeignKey("AppointmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data_Access_Layer_EF.Models.Appointment", b =>
                {
                    b.HasOne("Data_Access_Layer_EF.Models.In_Department", "In_Department")
                        .WithMany("Appointments")
                        .HasForeignKey("In_DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_Access_Layer_EF.Models.Patients_Case", "Patients_Case")
                        .WithMany("Appointments")
                        .HasForeignKey("Patients_CaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("In_Department");

                    b.Navigation("Patients_Case");
                });

            modelBuilder.Entity("Data_Access_Layer_EF.Models.Department", b =>
                {
                    b.HasOne("Data_Access_Layer_EF.Models.Clinic", "Clinic")
                        .WithMany("Departments")
                        .HasForeignKey("ClinicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clinic");
                });

            modelBuilder.Entity("Data_Access_Layer_EF.Models.Documents", b =>
                {
                    b.HasOne("Data_Access_Layer_EF.Models.Appointment", "Appointment")
                        .WithMany("Documents")
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Data_Access_Layer_EF.Models.Document_type", "Document_Type")
                        .WithMany("Documents")
                        .HasForeignKey("Document_TypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Data_Access_Layer_EF.Models.In_Department", "In_Department")
                        .WithMany("Documents")
                        .HasForeignKey("In_DepartmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Data_Access_Layer_EF.Models.Patients", "Patients")
                        .WithMany("Documents")
                        .HasForeignKey("PatientsId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Data_Access_Layer_EF.Models.Patients_Case", "Patients_Case")
                        .WithMany("Documents")
                        .HasForeignKey("Patients_CaseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Appointment");

                    b.Navigation("Document_Type");

                    b.Navigation("In_Department");

                    b.Navigation("Patients");

                    b.Navigation("Patients_Case");
                });

            modelBuilder.Entity("Data_Access_Layer_EF.Models.In_Department", b =>
                {
                    b.HasOne("Data_Access_Layer_EF.Models.Department", "Department")
                        .WithMany("In_Departments")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_Access_Layer_EF.Models.Employees", "Employees")
                        .WithMany("In_Departments")
                        .HasForeignKey("EmployeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Data_Access_Layer_EF.Models.Patients_Case", b =>
                {
                    b.HasOne("Data_Access_Layer_EF.Models.Patients", "Patients")
                        .WithMany("Patients_Cases")
                        .HasForeignKey("PatientsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patients");
                });

            modelBuilder.Entity("Data_Access_Layer_EF.Models.Shedule", b =>
                {
                    b.HasOne("Data_Access_Layer_EF.Models.In_Department", "In_Department")
                        .WithMany("Shedules")
                        .HasForeignKey("In_DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("In_Department");
                });

            modelBuilder.Entity("EmployeesRoles", b =>
                {
                    b.HasOne("Data_Access_Layer_EF.Models.Employees", null)
                        .WithMany()
                        .HasForeignKey("EmployeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_Access_Layer_EF.Models.Roles", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data_Access_Layer_EF.Models.Appointment", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("Data_Access_Layer_EF.Models.Clinic", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("Data_Access_Layer_EF.Models.Department", b =>
                {
                    b.Navigation("In_Departments");
                });

            modelBuilder.Entity("Data_Access_Layer_EF.Models.Document_type", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("Data_Access_Layer_EF.Models.Employees", b =>
                {
                    b.Navigation("In_Departments");
                });

            modelBuilder.Entity("Data_Access_Layer_EF.Models.In_Department", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Documents");

                    b.Navigation("Shedules");
                });

            modelBuilder.Entity("Data_Access_Layer_EF.Models.Patients", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("Patients_Cases");
                });

            modelBuilder.Entity("Data_Access_Layer_EF.Models.Patients_Case", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Documents");
                });
#pragma warning restore 612, 618
        }
    }
}
